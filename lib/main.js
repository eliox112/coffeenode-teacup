// Generated by CoffeeScript 1.9.0
(function() {
  var CND, rpr, teacup;

  CND = require('cnd');

  rpr = CND.rpr.bind(CND);


  /* https://github.com/goodeggs/teacup */

  teacup = require('teacup');

  (function(_this) {
    return (function() {
      var my_name, name, _results;
      _results = [];
      for (name in teacup) {
        switch (name) {
          case 'Teacup':
          case 'cede':
            continue;
          case 'render':
            my_name = name;
            break;
          case 'renderable':
            my_name = 'new_tag';
            break;
          default:
            my_name = name.toUpperCase();
        }
        _results.push(_this[my_name] = teacup[name].bind(_this));
      }
      return _results;
    });
  })(this)();

  this.TEXT_INPUT = function(Q, label) {
    if (Q == null) {
      Q = {};
    }
    if (label != null) {
      if (Q['label'] != null) {
        throw new Error("can't have both an unnamed argument and an option called 'label'");
      }
    } else {
      label = Q['label'];
      if (label == null) {
        throw new Error("must have either an unnamed argument and an option called 'label'");
      }
    }
    if (Q['placeholder'] == null) {
      Q['placeholder'] = label.replace(/\s*:\s*$/, '');
    }
    debug('TEXT_INPUT', Q);
    return this.LABEL((function(_this) {
      return function() {
        _this.SPAN({
          "class": 'label'
        }, label);
        return _this.INPUT(Q);
      };
    })(this));
  };

  this.EMAIL = function(Q) {
    var label;
    if (Q == null) {
      Q = {};
    }
    label = CND.pluck(Q, 'label', "your email:");
    if (Q['name'] == null) {
      Q['name'] = 'email';
    }
    if (Q['type'] == null) {
      Q['type'] = 'email';
    }
    if (Q['required'] == null) {
      Q['required'] = true;
    }
    return this.TEXT_INPUT(Q, label);
  };

  this.PASSWORD = function(Q) {
    var label;
    if (Q == null) {
      Q = {};
    }
    label = CND.pluck(Q, 'label', "your password:");
    if (Q['name'] == null) {
      Q['name'] = 'password';
    }
    if (Q['type'] == null) {
      Q['type'] = 'password';
    }
    if (Q['required'] == null) {
      Q['required'] = true;
    }
    return this.TEXT_INPUT(Q, label);
  };

  this.CONFIRM_PASSWORD = function(Q) {
    var label;
    if (Q == null) {
      Q = {};
    }
    label = CND.pluck(Q, 'label', "your password again:");
    if (Q['name'] == null) {
      Q['name'] = 'password-r';
    }
    if (Q['type'] == null) {
      Q['type'] = 'password';
    }
    if (Q['required'] == null) {
      Q['required'] = true;
    }
    return this.TEXT_INPUT(Q, label);
  };

  this.SUBMIT = function(Q) {
    var label;
    if (Q == null) {
      Q = {};
    }
    label = CND.pluck(Q, 'label', "submit");
    if (Q['type'] == null) {
      Q['type'] = 'submit';
    }
    return this.BUTTON(Q, label);
  };

}).call(this);
