{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../../src/tests/main.test.coffee"
  ],
  "names": [],
  "mappings": "AAC4G;EAAA;AAAA,MAAA,GAAA,EAAA,KAAA,EAAA,KAAA,EAAA,GAAA,EAAA;;EAC5G,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,GAAA,GAA4B,GAAG,CAAC,GAAG,CAAC,IAAR,CAAa,GAAb;;EAC5B,KAAA,GAA4B,oBAHgF;;;;;;EAQ5G,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B,EARgF;;;;;;EAa5G,IAAA,GAAkB,OAAA,CAAQ,UAAR,EAb0F;;;EAgB5G,IAAC,CAAE,QAAF,CAAD,GAAgB,QAAA,CAAE,CAAF,EAAK,IAAL,CAAA;AAChB,QAAA;IAAC,CAAA,GAAI,OAAA,CAAQ,OAAR;IACJ,CAAC,CAAC,EAAF,CAAO,CAAC,CAAC,MAAF,CAAS,CAAA,CAAA,GAAA;aAAG,CAAC,CAAC,CAAF,CAAI,MAAJ,EAAY,CAAA,CAAA,GAAA;eAAG;MAAH,CAAZ;IAAH,CAAT,CAAP,EAA4C,CAAA,oBAAA,CAA5C;IACA,CAAC,CAAC,EAAF,CAAO,CAAC,CAAC,MAAF,CAAS,CAAA,CAAA,GAAA;aAAG,CAAC,CAAC,GAAF,CAAM,UAAN,EAAkB,CAAA,CAAA,GAAA;eAAG;MAAH,CAAlB;IAAH,CAAT,CAAP,EAAuD,CAAA,oCAAA,CAAvD,EAFD;;IAIC,CAAC,CAAC,EAAF,CAAO,CAAC,CAAC,MAAF,CAAS,CAAA,CAAA,GAAA;aAAG,CAAC,CAAC,EAAF,CAAK,OAAL;IAAH,CAAT,CAAP,EAAmC,CAAA,mBAAA,CAAnC;IACA,CAAC,CAAC,EAAF,CAAO,CAAC,CAAC,MAAF,CAAS,CAAA,CAAA,GAAA;aAAG,CAAC,CAAC,EAAF,CAAK,OAAL;IAAH,CAAT,CAAP,EAAmC,CAAA,sBAAA,CAAnC;IACA,CAAC,CAAC,EAAF,CAAO,CAAC,CAAC,MAAF,CAAS,CAAA,CAAA,GAAA;aAAG,CAAC,CAAC,EAAF,CAAK,MAAL;IAAH,CAAT,CAAP,EAAmC,CAAA,aAAA,CAAnC;IACA,CAAC,CAAC,EAAF,CAAO,CAAC,CAAC,MAAF,CAAS,CAAA,CAAA,GAAA;aAAG,CAAC,CAAC,EAAF,CAAK,qBAAL;IAAH,CAAT,CAAP,EAAkD,CAAA,iCAAA,CAAlD;WACA,IAAA,CAAA;EATe,EAhB4F;;;EA6B5G,IAAG,MAAA,KAAU,OAAO,CAAC,IAArB;IAAkC,CAAA,CAAA,CAAA,GAAA;aACjC,IAAA,CAAK,IAAL;IADiC,CAAA,IAAlC;;AA7B4G",
  "sourcesContent": [
    "\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr.bind CND\nbadge                     = 'COFFEENODE-TEACUP'\n# log                       = CND.get_logger 'plain',     badge\n# info                      = CND.get_logger 'info',      badge\n# whisper                   = CND.get_logger 'whisper',   badge\n# alert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\n# warn                      = CND.get_logger 'warn',      badge\n# help                      = CND.get_logger 'help',      badge\n#...........................................................................................................\n### https://github.com/goodeggs/teacup ###\ntest \t\t\t\t\t\t\t\t\t\t\t= require 'guy-test'\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"basics\" ] = ( T, done ) ->\n\t_ = require '../..'\n\tT.eq ( _.render => _.P '#id4', => \"helo\" ), \"\"\"<p id=\"id4\">helo</p>\"\"\"\n\tT.eq ( _.render => _.DIV '.foo.bar', => \"some text\" ), \"\"\"<div class=\"foo bar\">some text</div>\"\"\"\n\t### one of the reasons we're dropping support for this is seen below: ###\n\tT.eq ( _.render => _.H2 '#helo'\t), \"\"\"<h2 id=\"helo\"></h2>\"\"\"\n\tT.eq ( _.render => _.H2 '.helo'\t), \"\"\"<h2 class=\"helo\"></h2>\"\"\"\n\tT.eq ( _.render => _.H2 'helo' \t), \"\"\"<h2>helo</h2>\"\"\"\n\tT.eq ( _.render => _.H2 '#helo and then some' \t), \"\"\"<h2 id=\"helo and then some\"></h2>\"\"\"\n\tdone()\n\n\n############################################################################################################\nif module is require.main then do =>\n\ttest @\n"
  ]
}